# .github/workflows/network-deploy.yml
name: Network Infrastructure Deployment

on:
  # Automated triggers
  push:
    branches:
      - develop
      - uat
      - main
    paths:
      - 'terraform/modules/network_infrastructure/**'
      - '.github/workflows/network-deploy.yml'
  
  # Keep manual option for troubleshooting and special cases
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev, uat, prod)'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - uat
          - prod
      application:
        description: 'Application to configure (giortech, waspwallet, academyaxis)'
        required: true
        default: 'giortech'
        type: choice
        options:
          - giortech
          - waspwallet
          - academyaxis
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

env:
  REGION: us-central1

jobs:
  determine-context:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      application: ${{ steps.set-app.outputs.application }}
      project_id: ${{ steps.set-project.outputs.project_id }}
      service_name: ${{ steps.set-service.outputs.service_name }}
      action: ${{ steps.set-action.outputs.action }}
    
    steps:
      - name: Set environment based on trigger
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=prod" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/uat" ]]; then
            echo "environment=uat" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/develop" ]]; then
            echo "environment=dev" >> $GITHUB_OUTPUT
          else
            echo "environment=dev" >> $GITHUB_OUTPUT
          fi
          
          echo "Using environment: ${{ steps.set-env.outputs.environment }}"
      
      - name: Set application based on trigger
        id: set-app
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "application=${{ github.event.inputs.application }}" >> $GITHUB_OUTPUT
          else
            # Extract from repository name
            REPO_NAME="${{ github.repository }}"
            REPO_PART=$(echo $REPO_NAME | cut -d'/' -f2)
            
            if [[ "$REPO_PART" == giortech* ]]; then
              APP_NAME="giortech"
            elif [[ "$REPO_PART" == waspwallet* ]]; then
              APP_NAME="waspwallet"
            elif [[ "$REPO_PART" == academyaxis* ]]; then
              APP_NAME="academyaxis"
            else
              APP_NAME=$REPO_PART
            fi
            
            echo "application=$APP_NAME" >> $GITHUB_OUTPUT
          fi
          
          echo "Using application: ${{ steps.set-app.outputs.application }}"
      
      - name: Set project ID and service name
        id: set-project
        run: |
          APP="${{ steps.set-app.outputs.application }}"
          ENV="${{ steps.set-env.outputs.environment }}"
          
          PROJECT_ID="${APP}-${ENV}-project"
          SERVICE_NAME="${APP}-${ENV}"
          
          echo "project_id=$PROJECT_ID" >> $GITHUB_OUTPUT
          echo "service_name=$SERVICE_NAME" >> $GITHUB_OUTPUT
          
          echo "Using project ID: $PROJECT_ID"
          echo "Using service name: $SERVICE_NAME"
      
      - name: Set action based on trigger
        id: set-action
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "action=${{ github.event.inputs.action }}" >> $GITHUB_OUTPUT
          else
            echo "action=apply" >> $GITHUB_OUTPUT
          fi
          
          echo "Using action: ${{ steps.set-action.outputs.action }}"

  # Rest of the workflow remains the same, with a conditional that ensures
  # the Terraform Apply step only runs when action=apply
  
  get-identity:
    needs: determine-context
    runs-on: ubuntu-latest
    outputs:
      wi_provider: ${{ steps.identity.outputs.wi_provider }}
      sa_email: ${{ steps.identity.outputs.sa_email }}
    
    steps:
      # Same as before
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set Workload Identity Provider and Service Account
        id: identity
        run: |
          # Set fallback values based on project ID
          PROJECT_NUM=$(gcloud projects describe ${{ needs.determine-context.outputs.project_id }} --format='value(projectNumber)')
          PROVIDER="projects/$PROJECT_NUM/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
          SA_EMAIL="github-actions-sa@${{ needs.determine-context.outputs.project_id }}.iam.gserviceaccount.com"
          
          echo "wi_provider=$PROVIDER" >> $GITHUB_OUTPUT
          echo "sa_email=$SA_EMAIL" >> $GITHUB_OUTPUT
  
  deploy-network:
    needs: [determine-context, get-identity]
    # Only run if we're applying or planning/destroying manually
    if: needs.determine-context.outputs.action == 'apply' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      # Same steps as before, but modify the Terraform Apply step
      - name: Terraform Apply
        if: needs.determine-context.outputs.action == 'apply'
        working-directory: ${{ steps.tf-dir.outputs.tf_dir }}
        run: terraform apply -auto-approve tfplan