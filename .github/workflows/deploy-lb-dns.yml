# File: .github/workflows/deploy-lb-dns.yml
name: Deploy Load Balancer and DNS

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (dev, uat, prod)'
        required: true
        default: 'prod'
        type: choice
        options:
          - dev
          - uat
          - prod
      application:
        description: 'Application to configure (giortech, waspwallet, academyaxis)'
        required: true
        default: 'giortech'
        type: choice
        options:
          - giortech
          - waspwallet
          - academyaxis

env:
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set project variables based on inputs
        id: vars
        run: |
          # Set PROJECT_ID based on application and environment
          if [ "${{ github.event.inputs.application }}" = "giortech" ]; then
            if [ "${{ github.event.inputs.environment }}" = "prod" ]; then
              echo "PROJECT_ID=giortech-prod-project" >> $GITHUB_OUTPUT
            elif [ "${{ github.event.inputs.environment }}" = "uat" ]; then
              echo "PROJECT_ID=giortech-uat-project" >> $GITHUB_OUTPUT
            else
              echo "PROJECT_ID=giortech-dev-project" >> $GITHUB_OUTPUT
            fi
          elif [ "${{ github.event.inputs.application }}" = "waspwallet" ]; then
            echo "PROJECT_ID=waspwallet-${{ github.event.inputs.environment }}-project" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.application }}" = "academyaxis" ]; then
            echo "PROJECT_ID=academyaxis-${{ github.event.inputs.environment }}-project" >> $GITHUB_OUTPUT
          fi
          
          echo "Using project ID: ${{ steps.vars.outputs.PROJECT_ID }}"
      
      - name: Get Workload Identity configuration
        id: identity
        run: |
          # Map environment input to directory name (in case develop branch maps to dev directory)
          ENV_DIR="${{ github.event.inputs.environment }}"
          if [ "$ENV_DIR" = "develop" ]; then
            ENV_DIR="dev"
          fi
          
          echo "Using Terraform environment directory: $ENV_DIR"
          
          # Check if directory exists
          if [ ! -d "terraform/organization/${{ github.event.inputs.application }}/$ENV_DIR" ]; then
            echo "Error: Directory terraform/organization/${{ github.event.inputs.application }}/$ENV_DIR does not exist"
            ls -la terraform/organization/${{ github.event.inputs.application }}/
            exit 1
          fi
          
          # Use Terraform to get the Workload Identity Provider and Service Account
          cd terraform/organization/${{ github.event.inputs.application }}/$ENV_DIR
          
          # Initialize Terraform
          terraform init
          
          # Get the outputs
          PROVIDER=$(terraform output -raw workload_identity_provider 2>/dev/null || echo "")
          SA_EMAIL=$(terraform output -raw service_account_email 2>/dev/null || echo "")
          
          if [ -z "$PROVIDER" ] || [ -z "$SA_EMAIL" ]; then
            echo "Warning: Could not get Workload Identity Provider or Service Account from Terraform outputs"
            echo "Using fallback values based on project ID"
            PROVIDER="projects/$(gcloud projects describe ${{ steps.vars.outputs.PROJECT_ID }} --format='value(projectNumber)')/locations/global/workloadIdentityPools/github-pool/providers/github-provider"
            SA_EMAIL="github-actions-sa@${{ steps.vars.outputs.PROJECT_ID }}.iam.gserviceaccount.com"
          fi
          
          echo "WI_PROVIDER=$PROVIDER" >> $GITHUB_OUTPUT
          echo "SA_EMAIL=$SA_EMAIL" >> $GITHUB_OUTPUT
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ steps.identity.outputs.WI_PROVIDER }}
          service_account: ${{ steps.identity.outputs.SA_EMAIL }}
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
      
      - name: Setup Load Balancer and DNS
        run: |
          if [ ! -f "scripts/setup-lb-dns.sh" ]; then
            echo "Error: scripts/setup-lb-dns.sh does not exist"
            exit 1
          fi
          
          chmod +x scripts/setup-lb-dns.sh
          ./scripts/setup-lb-dns.sh \
            ${{ steps.vars.outputs.PROJECT_ID }} \
            ${{ github.event.inputs.application }} \
            ${{ github.event.inputs.environment }} \
            ${{ env.REGION }}